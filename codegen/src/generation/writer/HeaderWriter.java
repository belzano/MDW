package generation.writer;

import annotation.Header;
import generation.writer.helper.WriterHelper;
import generation.writer.helper.WriterHelperJava;
import model.EntityTypeModel;

import java.lang.annotation.Annotation;

public class HeaderWriter extends EntityWriter {

    private String _prefix;

    public HeaderWriter(String prefix) {
        super(Type.HEADER);
        _prefix = prefix;
    }

    @Override
    public String writeEntityContent(EntityTypeModel entityModel) {
        if (! entityModel.hasAnnotation(Header.class)) {
            return "";
        }

        StringBuilder buffer = new StringBuilder();
        buffer.append(writeComment("Code generated by codegen v0.1, from model definition in [" + WriterHelperJava.toQualifiedClassName(entityModel.getDescriptor())) + "]");

        Annotation headerAnnotation = entityModel.getEntityClass().getAnnotation(Header.class);
        if (headerAnnotation != null) {
            Header header = (Header) headerAnnotation;
            for (String comment : header.comments()) {
                buffer.append(writeComment(comment));
            }
        }

        return buffer.toString();

    }

    private String writeComment(String content) {
        return _prefix + " " + content + WriterHelper.EOL;
    }
}
